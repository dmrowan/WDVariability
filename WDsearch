#!/usr/bin/env python
from __future__ import print_function, division
import os, sys
import matplotlib
import matplotlib.pyplot as plt
import numpy as np
import argparse
from astropy.table import Table
from datetime import datetime
from dateutil import parser as pr
from datetime import timedelta
import astropy
import pandas as pd
import matplotlib.image as mpimg
import astroquery
from astroquery.simbad import Simbad
from astropy import units as u
from astropy.coordinates import SkyCoord
#Dom Rowan REU 2018

def main():
    #Buil lists to construct df
    source_list = []
    simbad_name = []
    simbad_otype = []
    simbad_otype_other = []

    #Make custom simbad
    customSimbad = Simbad()
    customSimbad.add_votable_fields('otype', 'otype(opt)')

    #Loop through sources in current directory
    for filename in os.listdir(os.getcwd()):
        if filename.endswith(".csv") and filename[0].isdigit():
            sourcename = filename[:-8]
            stringcoords = sourcename[0:2]+":"+sourcename[2:4]+":"+sourcename[4:9]+" "+sourcename[9:12] + ":" + sourcename[12:14]+":"+sourcename[14:]
            coord = SkyCoord(stringcoords, unit=(u.hour, u.deg))
            q_result = customSimbad.query_region(coord, 2*u.arcsec)

            source_list.append(sourcename)
            if q_result is not None:
                simbad_name.append(str(q_result['MAIN_ID'][0], 'utf-8'))
                simbad_otype.append(str(q_result['OTYPE'][0], 'utf-8'))
                simbad_otype_other.append(str(q_result['OTYPE_opt'][0], 'utf-8'))

    #Make output df
    output_df = pd.DataFrame({"SourceName":source_list, "SimbadName":simbad_name, "SimbadType":simbad_otype, "SimbadTypeO":simbad_otype_other})
    output_df.to_csv("Catalog/AllCatalog_Simbad.csv")

if __name__ == '__main__':
    main()
