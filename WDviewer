#!/usr/bin/env python
from __future__ import print_function, division
import os, sys
import matplotlib
import matplotlib.pyplot as plt
import numpy as np
import argparse
from astropy.table import Table
from datetime import datetime
from dateutil import parser as pr
from datetime import timedelta
import astropy
import pandas as pd
import matplotlib.image as mpimg
import astroquery
from astroquery.simbad import Simbad
from astropy import units as u
from astropy.coordinates import SkyCoord
from progressbar import ProgressBar
import subprocess
import warnings
import time
import math
#Dom Rowan REU 2018

warnings.simplefilter("once")

#View and comment on sources in range f, l+1
def main(f,l):
    assert(os.path.isfile("Output/AllData.csv"))
    df_rank = pd.read_csv("Output/AllData.csv")
    f = f-2
    l = l-2
    for i in range(f,l+1):
        #Load in n files at a time
        numload = 8
        if (i == f) & (i % numload != 0):
            for ii in range(i, i+(numload-(i%numload))):
                source = df_rank['SourceName'][ii]
                band = df_rank['Band'][ii]
                if '[' in source:
                   source = source.replace('[', "\[").replace(']','\]')
                   filename = "PDFs/{0}_{1}_combined.pdf".format(source, band)
                else:
                    filename = "PDFs/{0}_{1}_combined.pdf".format(source, band)
                subprocess.run(['xdg-open', filename])
        if i % numload == 0:
            if (l-i)>numload:
                upper = i+numload
            else:
                upper=l+1
            for ii in range(i,upper):
                source = df_rank['SourceName'][ii]
                band = df_rank['Band'][ii]
                if '[' in source:
                   source = source.replace('[', "\[").replace(']','\]')
                   filename = "PDFs/{0}_{1}_combined.pdf".format(source, band)
                else:
                    filename = "PDFs/{0}_{1}_combined.pdf".format(source, band)
                subprocess.run(['xdg-open', filename])

        if str(df_rank['Comment'][i]) != 'nan':
            print("Current comment: ", df_rank['Comment'][i])
        comment = input(df_rank['SourceName'][i]+" -- Enter comment to save into csv. Hit enter for no comment or to keep existing comment --- ")
        if comment == "break":
            break
        if len(comment) != 0:
            df_rank.loc[i, 'Comment'] = comment

    df_rank.to_csv("Output/AllData.csv", index=False)


def selectidx(n):
    assert(os.path.isfile("Output/AllData.csv"))
    df_rank = pd.read_csv("Output/AllData.csv")
    i = n-2
    source = df_rank['SourceName'][i]
    band = df_rank['Band'][i]
    if '[' in source:
       source = source.replace('[', "\[").replace(']','\]')
       filename = "PDFs/{0}_{1}_combined.pdf".format(source, band)
    else:
        filename = "PDFs/{0}_{1}_combined.pdf".format(source, band)
    subprocess.run(['xdg-open', filename])
    if str(df_rank['Comment'][i]) != 'nan':
        print("Current comment: ", df_rank['Comment'][i])
    comment = input("Enter comment to save into csv. Hit enter for no comment or to keep existing comment --- ")
    if len(comment) != 0:
        df_rank.loc[i, 'Comment'] = comment
        
    df_rank.to_csv("Output/AllData.csv", index=False)

def move(i):
    assert(os.path.isfile("Output/AllData.csv"))
    df_rank = pd.read_csv("Output/AllData.csv")
    i = i-2
    source = df_rank['SourceName'][i]
    band = df_rank['Band'][i]
    if '[' in source:
       source = source.replace('[', "\[").replace(']','\]')
       pdffilename = "PDFs/{0}_{1}_combined.pdf".format(source, band)
       csvfilename = "{0}-{1}.csv".format(source, band)
    else:
        pdffilename = "PDFs/{0}_{1}_combined.pdf".format(source, band)
        csvfilename = "{0}-{1}.csv".format(source, band)
    objecttype = input("Enter category to move to: Pulsator, KnownPulsator, or Eclipse --- ")
    if (objecttype != "Pulsator") and (objecttype != "KnownPulsator") and (objecttype != "Eclipse"):
        print("Invalid object type")
        return
    else:
        if os.path.isdir("../InterestingSources/"+objecttype+"/"+source):
            print("Directory already exists")
        else:
            print("Making directory for source")
            subprocess.run(['mkdir', '../InterestingSources/'+objecttype+"/"+source])

        subprocess.run(['cp', pdffilename, '../InterestingSources/'+objecttype+"/"+source+"/"])
        subprocess.run(['cp', csvfilename, '../InterestingSources/'+objecttype+"/"+source+"/"])
        

if __name__ == '__main__':
    desc="""
    This is a compact way to look through the AllData.csv files. We can look at sources in order, add comments, or supply index names
    """
    parser = argparse.ArgumentParser(description=desc)
    parser.add_argument("--i", help="Select row of source to view, opening pdf in window", default=None, type=int)
    parser.add_argument("--f", help="If using fromtop, identify first index", default=2, type=int)
    parser.add_argument("--l", help="If using fromtop, identify last index", default=12, type=int)
    parser.add_argument("--move", help="Move file in index to Interesting sources", default=None, type=int)
    args= parser.parse_args()

    if args.move is not None:
        move(args.move)
    elif args.i is not None:
        selectidx(args.i)
    else:
        main(args.f, args.l)
